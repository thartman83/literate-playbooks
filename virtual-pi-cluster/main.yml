---
- name: Create and start raspberry pi vms on host
  hosts: vm-hosts
  become: true

  vars:
    working_dir: "/tmp/virtpi"

    raspios_release: "2023-05-03"
    raspios_baseurl: "https://downloads.raspberrypi.org"
    raspios_arch: "raspios_lite_armhf"
    raspios_imagename: "raspios-bullseye-armhf-lite"
    raspios_imageurl: "{{ raspios_baseurl }}/{{ raspios_arch }}/images/{{ raspios_arch }}-{{ raspios_release }}/{{ raspios_release }}-{{ raspios_imagename }}.img.xz"
    raspios_checksumurl: "{{ raspios_baseurl }}/{{ raspios_arch }}/images/{{ raspios_arch }}-{{ raspios_release }}/{{ raspios_release }}-{{ raspios_imagename }}.img.xz.sha256"

  tasks:
    - name: Verify virtualization capabilities of the host
      ansible.builtin.shell:
        cmd: |-
          LC_ALL=C lscpu | grep Virtualization: | sed -e 's/^.*Virtualization:\s*\(.*\)\s*$/\1/'
      register: ret
      failed_when: ret.stdout != 'VT-x' and ret.stdout != 'AMD-V'

    - name: Verify that qemu-system-aarch64 package is present
      ansible.builtin.pacman:
        name: qemu-system-aarch64
        state: present

    - name: Verify that xz archive utilities are available
      ansible.builtin.pacman:
        name:
          - xz
          - p7zip
        state: present

    - name: Create temporary working directory
      ansible.builtin.file:
        path: "{{ working_dir }}"
        state: directory

    - name: Extract files from raspbian image
      community.general.iso_extract:
        image: "{{ working_dir }}/{{ raspios_release }}-{{ raspios_imagename }}.img"
        dest: "{{ working_dir }}"
        files:
          - 0.fat

    - name: Extract files from raspbian image
      community.general.iso_extract:
        image: "{{ working_dir }}/0.fat"
        dest: "{{ working_dir }}"
        files:
          - kernel8.img
